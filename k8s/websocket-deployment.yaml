apiVersion: apps/v1
kind: Deployment
metadata:
  name: websocket
  namespace: fantasy-ai
  labels:
    app: websocket
    component: realtime
spec:
  replicas: 2
  selector:
    matchLabels:
      app: websocket
  template:
    metadata:
      labels:
        app: websocket
        component: realtime
    spec:
      containers:
      - name: websocket
        image: fantasy-ai/websocket:latest  # Replace with your registry
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: ws
        envFrom:
        - configMapRef:
            name: fantasy-ai-config
        - secretRef:
            name: fantasy-ai-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: websocket-service
  namespace: fantasy-ai
  labels:
    app: websocket
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"  # For AWS
spec:
  selector:
    app: websocket
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  type: LoadBalancer  # For WebSocket external access
  sessionAffinity: ClientIP  # Sticky sessions for WebSocket